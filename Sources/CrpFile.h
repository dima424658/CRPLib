#pragma once

#include <vector>
#include <string>
#include <fstream>
#include <string.h>
#include "Entry.h"

using namespace std;

#define ALIGN_OFFS(x, a)            (x%a==0)?x:(x+(a-x%a))
#define CRP_GENERATED_BY        "Generated by CrpLib (built " __DATE__ "). Copyright(C) 2004, Arushan/AruTec Inc."

namespace CrpLib {
    class CCrpFile {
    private:
        HEADER_ID m_Id;
        int m_Flags, m_ArtiCount, m_MiscCount;
        int m_Offs;

        vector<ICrpEntry *> m_Arti;
        vector<ICrpEntry *> m_Misc;

        void InsertMiscEntry(CEntry *newEn);

    public:

        CCrpFile();

        CCrpFile(std::string filename);

        ~CCrpFile(void);

        bool Open(std::string filename);

        bool Save(std::string filename);

        // -- accessors --
        int GetArticleCount();

        CEntry *GetArticle(int index);

        int GetMiscCount();

        CEntry *GetMisc(int index);

        CEntry *GetMisc(ENTRY_ID id, int index = 0);

        int FindMisc(ENTRY_ID id, int index = 0);

        int GetFlags();

        void SetFlags(int flags);

        HEADER_ID GetId();

        void SetId(HEADER_ID id);

        // -- new methods --
        CEntry *NewArticle();

        CEntry *NewMisc(ENTRY_ID id, int index = 0, bool Allocate = true);
    };

}
