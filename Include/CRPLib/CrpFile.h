#pragma once

#include <vector>
#include <istream>
#include <ostream>
#include <string_view>

#include "CRPLib/Entry.h"

#define ALIGN_OFFS(x, a) (x % a == 0) ? x : (x + (a - x % a))

namespace CrpLib
{
    constexpr std::string_view cCRPGeneratedBy{"Generated by CrpLib (built " __DATE__ "). Copyright(C) 2004, Arushan/AruTec Inc."};

    class CCrpFile
    {
    private:
        eHeaderID m_Id = eHeaderID::Car;
        int m_Flags    = 0x1A;
        int m_Offset   = 0x10;

        std::vector<ICrpEntry *> m_Articles;
        std::vector<ICrpEntry *> m_Misc;

        void InsertMiscEntry(CEntry *newEn);

    public:
        CCrpFile() = default;

        void Read(std::istream &is);
        void Write(std::ostream &os);

        // -- accessors --
        int GetArticleCount();
        CEntry *GetArticle(int index);

        int GetMiscCount();
        CEntry *GetMisc(int index);
        CEntry *GetMisc(eEntryID id, int index = 0);
        int FindMisc(eEntryID id, int index = 0);

        int GetFlags();
        void SetFlags(int flags);

        eHeaderID GetId();
        void SetId(eHeaderID id);

        // -- new methods --
        CEntry *NewArticle();
        CEntry *NewMisc(eEntryID id, int index = 0, bool Allocate = true);
    };

} // namespace CrpLib
